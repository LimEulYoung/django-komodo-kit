#summary Brainstorm and General Outline for Features

For brevity feel free to use "DKK" (Django Komodo Kit) to indicate this project whenever writing below.

= Misc. Feature Ideas =

 * A toolbar for creating Django components: Model, Manager, Field, Form, etc.
 * Add Template Library for current project
 * Add template tag
 * New Project, New App. Ability to customize the outputs.  For example: settings customizations, include other common files like fields.py, forms.py, etc. by default.

= Developer Resources =
  *[http://community.activestate.com/forums/komodo-extensions Komodo Extensions & Macros Forum]
  *[http://community.activestate.com/forums/komodo Komodo Community Forums]

= Implementation Strategies =

The goal is to utilize the built-in user extension tools as much as possible to form the core functionality. The Komodo platform is flexible with regards to how you can use and reference collections of files/snippets/commands/... Whenever something isn't obvious to accomplish you can just create a command that runs a python script. This isn't meant to discourage anyone from exploring some of the more "exotic" strategies of writing extensions, writing XPCOM, or Python (+Django) + XUL. We'll need to weigh the pros and cons of those once we're ready to tackle some cool usability features.  

KomodoExtensionStrategies

= Feature Types =

== Snippet ==

== Macros ==

== Commands ==

== Toolbars ==

== Menu Items ==
=== Main Menu ===
=== Contextual Menus ===

== Templates ==

The DTL parser does not understand inheritance (via {% extends base.html %}). Therefore, it complains that the (X)HTML header is missing and, consequently, the document is not valid and well-formed. The header would be in base.html, though, for example.

== Extensions ==

= Thoughts/Questions =
  1. Need a way to bootstrap Komodo so that all DKK assets are automatically located and loaded into Komodo.